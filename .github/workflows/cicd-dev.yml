name: MovieBookie CI/CD For Dev Pipeline

on:
  pull_request:
    branches: [ "develop" ]
  push:
    branches: [ "develop" ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      # 레포지토리 체크아웃
      - name: Checkout
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.SUBMODULE_ACCESS_TOKEN }}
          submodules: true

      - name: Update submodule
        run: |
          git submodule update --remote --recursive

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      # gradle caching - 빌드 시간 향상
      - name: Gradle Caching
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew
        shell: bash

      - name: Build with Gradle
        run: ./gradlew clean bootJar -x test -Pprofile=dev
        shell: bash

      - name: Login to NCP Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.NCP_CONTAINER_REGISTRY }}
          username: ${{ secrets.NCP_ACCESS_KEY_ID }}
          password: ${{ secrets.NCP_SECRET_KEY }}

      # Docker 이미지 빌드, 태그 및 레지스트리에 푸시
      - name: docker image build
        run: docker build -f Dockerfile -t ${{ secrets.NCP_CONTAINER_REGISTRY }}/moviebookie-dev .

      - name: docker Hub push
        run: docker push ${{ secrets.NCP_CONTAINER_REGISTRY }}/moviebookie-dev

      # 컨테이너로 실행
      - name: Deploy to NCP Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.NCP_SERVER_HOST }}
          username: ${{ secrets.NCP_SERVER_USER }}
          password: ${{ secrets.NCP_SERVER_PASSWORD }}
          port: 22
          script: |
            sudo docker rm -f moviebookie || true
            sudo docker image rm ${{ secrets.NCP_CONTAINER_REGISTRY }}/moviebookie-dev:latest || true
            sudo docker pull ${{ secrets.NCP_CONTAINER_REGISTRY }}/moviebookie-dev
            sudo docker run -d -p 8080:8080 -e SPRING_PROFILES_ACTIVE=dev -e TZ=Asia/Seoul --name moviebookie-dev ${{ secrets.NCP_CONTAINER_REGISTRY }}/moviebookie-dev
